//console.log('DreamCars - cars.js bet√∂ltve');

// V√°rjuk meg a DOM bet√∂lt≈ëd√©s√©t
document.addEventListener('DOMContentLoaded', function() {
  //console.log('DOM bet√∂ltve, inicializ√°l√°s...');

  const elements = {
    brandSelect: document.getElementById('brand-select'),
    filterPanel: document.getElementById('filter-panel'),
    carDetails: document.getElementById('car-details'),
    bookBtn: document.getElementById('book-btn'),
    fuelFilter: document.getElementById('fuel-filter'),
    yearFilter: document.getElementById('year-filter'),
    priceFilter: document.getElementById('price-filter')
  };

  //console.log('Elemek ellen≈ërz√©se:');
  Object.entries(elements).forEach(function([key, value]) {
    //console.log('  -', key, ':', value ? 'Jo' : 'Nem jo');
  });

  const missingElements = Object.entries(elements)
    .filter(([key, value]) => !value)
    .map(([key]) => key);

  if (missingElements.length > 0) {
    console.error('Hi√°nyz√≥ elemek:', missingElements);
    alert('HIBA: Hi√°nyz√≥ HTML elemek: ' + missingElements.join(', '));
    return;
  }

  const state = {
    currentBrand: null,
    cars: [],
    selectedCarId: null
  };

  //console.log('M√°rk√°k bet√∂lt√©se indul...');
  initBrands();

  elements.brandSelect.addEventListener('change', handleBrandChange);
  elements.fuelFilter.addEventListener('change', applyFilters);
  elements.yearFilter.addEventListener('change', applyFilters);
  elements.priceFilter.addEventListener('input', debounce(applyFilters, 500));
  elements.bookBtn.addEventListener('click', handleBooking);

  //console.log('Event listenerek hozz√°adva');

  function initBrands() {
    const url = '../php/get_brands.php';
    //console.log('M√°rk√°k lek√©r√©se:', url);
    
    fetch(url)
      .then(function(response) {
        //console.log('response:', response.status, response.statusText);
        if (!response.ok) {
          throw new Error('HTTP hiba: ' + response.status);
        }
        return response.json();
      })
      .then(function(data) {
        //console.log('kapott adat:', data);
        
        if (!Array.isArray(data)) {
          throw new Error('nem t√∂mb: ' + typeof data);
        }

        if (data.length === 0) {
          console.warn('Nincsenek m√°rk√°k az adatb√°zisban');
          elements.brandSelect.innerHTML += '<option disabled>Nincsenek el√©rhet≈ë m√°rk√°k</option>';
          return;
        }

        data.forEach(function(brand) {
          const option = document.createElement('option');
          option.value = brand;
          option.textContent = brand;
          elements.brandSelect.appendChild(option);
          //console.log('M√°rka hozz√°adva:', brand);
        });

        //console.log('Minden elem inicializ√°lva');
        //console.log('M√°rk√°k bet√∂ltve:', data.length + ' db');
      })
      .catch(function(error) {
        //console.error('HIBA a m√°rk√°k bet√∂lt√©sekor:', error);
        alert('Hiba: Nem siker√ºlt bet√∂lteni a m√°rk√°kat!\n\n' + error.message + '\n\nEllen≈ërizd:\n1. A PHP f√°jl el√©rhet≈ës√©g√©t\n2. Az adatb√°zis kapcsolatot\n3. A konzolt tov√°bbi hib√°k√©rt');
      });
  }

  // M√°rka v√°laszt√°s kezel√©se
  function handleBrandChange() {
    const brand = elements.brandSelect.value;
    //console.log('M√°rka kiv√°lasztva:', brand);
    
    if (!brand) {
      //console.log('√úres m√°rka, panel elrejt√©se');
      elements.filterPanel.style.display = 'none';
      elements.carDetails.innerHTML = '<div class="empty-message" style="grid-column: 1 / -1;"><p>üöó V√°lassz egy m√°rk√°t a keres√©s megkezd√©s√©hez!</p></div>';
      elements.bookBtn.style.display = 'none';
      return;
    }

    state.currentBrand = brand;
    
    elements.filterPanel.style.display = 'block';
    //console.log('Sz≈±r≈ëk megjelen√≠tve');
    
    // Sz≈±r≈ëk vissza√°ll√≠t√°sa
    elements.fuelFilter.value = '';
    elements.yearFilter.value = '';
    elements.priceFilter.value = '';
    //console.log('Sz≈±r≈ëk alaphelyzetbe √°ll√≠tva');
    
    loadCars(brand);
  }

  function loadCars(brand) {
    //console.log('Aut√≥k bet√∂lt√©se:', brand);
    
    showLoading(elements.carDetails, 'Aut√≥k bet√∂lt√©se...');
    elements.bookBtn.style.display = 'none';

    let url = '../php/get_cars.php?marka=' + encodeURIComponent(brand);
    
    const fuel = elements.fuelFilter.value;
    const year = elements.yearFilter.value;
    const maxPrice = elements.priceFilter.value;
    
    if (fuel) {
      url += '&fuel=' + fuel;
      //console.log('√územanyag sz≈±r≈ë:', fuel);
    }
    if (year) {
      url += '&year=' + year;
      //console.log('√âvj√°rat sz≈±r≈ë:', year);
    }
    if (maxPrice) {
      url += '&maxPrice=' + maxPrice;
      //console.log('√År sz≈±r≈ë:', maxPrice);
    }

    //console.log('Teljes URL:', url);

    fetch(url)
      .then(function(response) {
        //console.log('response: ', response.status, response.statusText);
        if (!response.ok) {
          throw new Error('HTTP hiba: ' + response.status);
        }
        return response.json();
      })
      .then(function(cars) {
        //console.log('Kapott aut√≥k:', cars);
        //console.log('Aut√≥k sz√°ma:', Array.isArray(cars) ? cars.length : 'nem t√∂mb');
        
        if (!Array.isArray(cars)) {
          throw new Error('A v√°lasz nem t√∂mb');
        }

        state.cars = cars;
        displayCars(cars);
      })
      .catch(function(error) {
        //console.error('HIBA az aut√≥k bet√∂lt√©sekor:', error);
        showError('Nem siker√ºlt bet√∂lteni az aut√≥kat: ' + error.message);
      });
  }

  // Sz≈±r≈ëk alkalmaz√°sa
  function applyFilters() {
    //console.log('Sz≈±r≈ëk alkalmaz√°sa');
    if (!state.currentBrand) {
      //console.warn('Nincs kiv√°lasztva m√°rka');
      return;
    }
    loadCars(state.currentBrand);
  }

  // Aut√≥k megjelen√≠t√©se
  function displayCars(cars) {
    //console.log('Aut√≥k megjelen√≠t√©se:', cars.length + ' db');
    
    if (!cars || cars.length === 0) {
      elements.carDetails.innerHTML = `
        <div class="empty-message">
          <p>Nincs tal√°lat a megadott sz≈±r≈ëkkel.</p>
          <p style="font-size: 0.9rem; margin-top: 10px;">Pr√≥b√°lj m√°s sz≈±r≈ëket haszn√°lni!</p>
        </div>
      `;
      elements.bookBtn.style.display = 'none';
      console.log('Nincs megjelen√≠thet≈ë aut√≥');
      return;
    }

    let html = '';
    
    cars.forEach(function(car, index) {
      //console.log('Aut√≥ #' + (index + 1) + ':', car.nev);
      html += `
        <div class="car-card" data-car-id="${car.id}">
          <img src="${car.img}" alt="${car.nev}" onerror="this.onerror=null; this.src='../assets/placeholder.jpg'; console.error('K√©p bet√∂lt√©si hiba: ${car.img}');">
          <h3>${car.nev}</h3>
          <p class="car-desc">${car.desc}</p>
          <div class="car-details-list">
            <ul>
              <li><strong>√âvj√°rat:</strong> ${car.evjarat}</li>
              <li><strong>√územanyag:</strong> ${car.uzemanyag}</li>
              <li><strong>√År:</strong> ${car.arFormat}</li>
            </ul>
          </div>
        </div>
      `;
    });

    elements.carDetails.innerHTML = html;
    elements.bookBtn.style.display = 'block';
    
    //console.log('Aut√≥k megjelen√≠tve sikesen');
  }

  // Foglal√°s kezel√©se
  function handleBooking() {
    //console.log('Foglal√°s gomb megnyomva');
    
    if (state.cars.length === 0) {
      alert('Nincs kiv√°laszthat√≥ aut√≥!');
      return;
    }

    const carIds = state.cars.map(function(car) { return car.id; }).join(',');
    window.location.href = 'booking.html?brand=' + encodeURIComponent(state.currentBrand) + '&cars=' + carIds;
  }

  // Seg√©df√ºggv√©nyek

  function showLoading(element, message) {
    //console.log('Loading:', message);
    element.innerHTML = `
      <div style="text-align: center; padding: 40px; color: #999;">
        <p style="font-size: 1.2rem;">${message}</p>
      </div>
    `;
  }

  function showError(message) {
    //console.error('Hiba megjelen√≠t√©se:', message);
    elements.carDetails.innerHTML = `
      <div style="text-align: center; padding: 40px; color: #e50914;">
        <p style="font-size: 1.2rem;">${message}</p>
        <p style="font-size: 0.9rem; margin-top: 10px; color: #999;">Ellen≈ërizd a konzolt tov√°bbi inform√°ci√≥k√©rt!</p>
      </div>
    `;
  }

  // Debounce f√ºggv√©ny
  function debounce(func, delay) {
    let timeoutId;
    return function() {
      const context = this;
      const args = arguments;
      clearTimeout(timeoutId);
      timeoutId = setTimeout(function() {
        func.apply(context, args);
      }, delay);
    };
  }

  //console.log('Inicializ√°l√°s befejezve, v√°rakoz√°s...');
});